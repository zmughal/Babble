name: Run Tests

on:
  push:
    branches:
      - '*'
  pull_request:

jobs:
  dist:
    name: Make distribution
    runs-on: ubuntu-latest
    outputs:
      dist-name: ${{ steps.build-dist.outputs.dist-name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache ~/perl5
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-dist-locallib
          path: ~/perl5
      - name: Perl version
        run: |
          perl -v
      - name: Install cpanm
        run: |
          curl -L https://cpanmin.us | perl - --sudo App::cpanminus
      - name: Install local::lib
        run: |
          cpanm --local-lib=~/perl5 local::lib && eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
      - name: Install author deps
        shell: bash
        run: |
          eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
          cpanm --notest --with-recommends --with-suggests App::ModuleBuildTiny
      - name: Make distribution
        shell: bash
        id: build-dist
        run: |
          eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
          export DISTNAME=$(mbtiny dist --verbose | perl -alE 'print do { (my $file = $F[2]) =~ s/\.tar\.[^.]+$/.tar.gz/; $file }')
          echo "dist-name=$DISTNAME" >> $GITHUB_OUTPUT
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ${{ steps.build-dist.outputs.dist-name }}
  test:
    needs: dist
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        perl: ['5']
        # defaults
        cache: [1]
        early_bail_out: [1]
        late_bail_out: [1]
        include:
          - { os: 'ubuntu-latest', perl: "5.36" , cache: 1, early_bail_out: 1, late_bail_out: 1 }
          - { os: 'ubuntu-latest', perl: "5.34" , cache: 1, early_bail_out: 1, late_bail_out: 1 }
          - { os: 'ubuntu-latest', perl: "5.32" , cache: 1, early_bail_out: 1, late_bail_out: 1 }
          - { os: 'ubuntu-latest', perl: "5.30" , cache: 1, early_bail_out: 1, late_bail_out: 1 }
          - { os: 'ubuntu-latest', perl: "5.28" , cache: 1, early_bail_out: 1, late_bail_out: 1 }
          - { os: 'ubuntu-latest', perl: "5.26" , cache: 1, early_bail_out: 1, late_bail_out: 1 }
          - { os: 'ubuntu-latest', perl: "5.24" , cache: 1, early_bail_out: 1, late_bail_out: 1 }
          - { os: 'ubuntu-latest', perl: "5.22" , cache: 1, early_bail_out: 1, late_bail_out: 1 }
          ## Disabling on v5.20 due to PPR::X bug.
          #- { os: 'ubuntu-latest', perl: "5.20" }
          - { os: 'ubuntu-latest', perl: "5.18" , cache: 1, early_bail_out: 1, late_bail_out: 1 }
          - { os: 'ubuntu-latest', perl: "5.16" , cache: 1, early_bail_out: 1, late_bail_out: 1 }
          - { os: 'ubuntu-latest', perl: "5.14" , cache: 1, early_bail_out: 1, late_bail_out: 1 }
          - { os: 'ubuntu-latest', perl: "5.12" , cache: 1, early_bail_out: 1, late_bail_out: 1 }
          - { os: 'ubuntu-latest', perl: "5.10" , cache: 1, early_bail_out: 1, late_bail_out: 1 }
          # Toggle flags:
          - { os: 'ubuntu-latest', perl: "5"    , cache: 0, early_bail_out: 1, late_bail_out: 1 }
          - { os: 'ubuntu-latest', perl: "5"    , cache: 0, early_bail_out: 1, late_bail_out: 0 }
          - { os: 'ubuntu-latest', perl: "5"    , cache: 0, early_bail_out: 0, late_bail_out: 0 }
          - { os: 'ubuntu-latest', perl: "5"    , cache: 1, early_bail_out: 0, late_bail_out: 0 }
    name: "Perl ${{ matrix.perl }} on ${{ matrix.os }} (cache: ${{matrix.cache}}, early_bail_out: ${{matrix.early_bail_out}}, late_bail_out: ${{matrix.late_bail_out}}"

    steps:
      - name: Get dist artifact
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Set up perl
        uses: shogo82148/actions-setup-perl@v1
        if: matrix.os != 'windows-latest'
        with:
          perl-version: ${{ matrix.perl }}
      - name: Set up perl (Strawberry)
        uses: shogo82148/actions-setup-perl@v1
        if: matrix.os == 'windows-latest'
        with:
          distribution: 'strawberry'

      - run: perl -V

      - name: Install Perl deps
        run: |
          cpanm -nq Module::Build::Tiny
          cpanm --notest --installdeps ${{ needs.dist.outputs.dist-name  }}

      - name: Install develop deps
        run: |
          cpanm --notest --installdeps --with-develop ${{ needs.dist.outputs.dist-name  }}

      - name: Run tests
        env:
          HARNESS_TIMER: 1
          PERL_BABBLE_CACHE_RE: ${{        matrix.cache          }}
          PERL_BABBLE_BAIL_OUT_EARLY: ${{  matrix.early_bail_out }}
          PERL_BABBLE_BAIL_OUT_LATE: ${{   matrix.late_bail_out  }}
        run: |
          perl -e 'print qq|PERL_BABBLE_CACHE_RE      : $ENV{PERL_BABBLE_CACHE_RE}\n|';
          perl -e 'print qq|PERL_BABBLE_BAIL_OUT_EARLY: $ENV{PERL_BABBLE_BAIL_OUT_EARLY}\n|';
          perl -e 'print qq|PERL_BABBLE_BAIL_OUT_LATE : $ENV{PERL_BABBLE_BAIL_OUT_LATE}\n|';
          cpanm --verbose --test-only ${{ needs.dist.outputs.dist-name  }}
